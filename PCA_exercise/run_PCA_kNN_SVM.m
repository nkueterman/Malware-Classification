% run_PCA_kNN_SVM
clear; close; clc;

load('Sample_MNIST.mat')
load('indices.mat')

randX = randi(size(X,1),100,1);
[figHandle, display_array] = displayData(X(randX,:));

trainData = X(train_idx,:);
validData = X(valid_idx,:);


%% Perform PCA
N = 20;

[trainA,trainY,trainEigVals] = PCA_transformation(trainData,N);

validY = validData * trainA;


%% kNN
Mdl = fitcknn(trainY,y(train_idx),'DistanceWeight','squaredinverse',...
                                  'NumNeighbors',10,...
                                  'NSMethod','euclidean');

yPred = predict(Mdl,validY);

% nnz(yPred == y(valid_idx))

yActual = ind2vec(y',10);

figure
plotconfusion(yActual(:,valid_idx),ind2vec(yPred',10))


%% Quadratic SVM
t = templateSVM('KernelFunction','polynomial','PolynomialOrder',2);

SVMModel = fitcecoc(trainY,y(train_idx),'Learners',t);

yPred2 = predict(SVMModel,validY);

figure
plotconfusion(yActual(:,valid_idx),ind2vec(yPred2',10))
